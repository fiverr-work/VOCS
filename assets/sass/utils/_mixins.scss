// Media Query (xs, sm, md, lg, xl)
@mixin mq($key) {
	$size: map-get($breakpoints, $key);
	@media only screen and (max-width: $size) {
		@content;
	}
}

// Pseudo-elements
@mixin pseudo($loc: before, $content: "", $position: absolute) {
	position: relative;

	&::#{$loc} {
		content: $content;
		position: $position;
		@content;
	}
}

// Ripple effect for buttons
@mixin ripple-effect {
	display: inline-block;
	overflow: hidden;

	@include pseudo($loc: before) {
		background-color: $color-white;
		padding: 50%;
		border-radius: 50%;
		left: 50%;
		top: 50%;
		transform: translate(-50%, -50%) scale(1);
		opacity: 0;
		transition: transform 600ms, opacity 600ms;
		pointer-events: none;
	}

	&:active::before {
		transition: 0s;
		opacity: 1;
		transform: translate(-50%, -50%) scale(0);
	}
}

// Flexbox
@mixin flex($justify, $align) {
	display: flex;
	justify-content: $justify;
	align-items: $align;
}

// Set Font
@mixin font-source-sans($font: false, $size: false, $color: false, $weight: false, $lh: false) {
	@if $font {
		font-family: $font;
	}
	@if $size {
		font-size: $size;
	}
	@if $color {
		color: $color;
	}
	@if $weight {
		font-weight: $weight;
	}
	@if $lh {
		line-height: $lh;
	}
}

// Placeholder styling
@mixin placeholder {
	&.placeholder,
	&::placeholder,
	&:-moz-placeholder,
	&::-moz-placeholder,
	&:-ms-input-placeholder,
	&::-webkit-input-placeholder {
		@content;
	}
}

// Import fonts
@mixin font-face($family, $ttf-path) {
	@font-face {
		font-family: $family;
		src: url($ttf-path) format("truetype");
	}
}

// Show and hide an element
@mixin fade($type) {
	@if $type== "hide" {
		visibility: hidden;
		opacity: 0;
		transition: visibility 1s, opacity 1s;
		pointer-events: none;
	} @else if $type== "show" {
		visibility: visible;
		opacity: 1;
		transition: visibility 1s, opacity 1s;
		pointer-events: all;
	}
}
